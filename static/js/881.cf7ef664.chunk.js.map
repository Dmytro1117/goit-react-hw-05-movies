{"version":3,"file":"static/js/881.cf7ef664.chunk.js","mappings":"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","sources":["API.js","pages/Movie/Movies.styled.js","pages/Movie/Movie.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '4202ba49f9ca3f0cb877db41381d2d2b',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      \n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: IMG_URL + photo,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};","import styled from 'styled-components';\n\nexport const Form = styled.form`\nmargin-left: auto;\nmargin-right: auto;\n    margin-top: 32px;\n    max-width: 600px;\n    display: flex;\n    justify-content: center;\n    max-width: 400px;;\n`;\n\nexport const Input = styled.input`\n background-color: silver;\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  border: 0;\n  cursor: pointer;\n  outline: none;\n   padding: 10px 20px;\n  text-decoration: none;\n  color: black;\n  font-weight: 600;\n  color: white;\n    background-color: orangered;\n  &:hover {\n    color: orange;\n    background-color: gray;\n  }\n`;\n\n\n\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchByQuery } from \"../../API\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n  Button,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    searchQuery && fetchByQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (query === \"\") return;\n    const response = await fetchByQuery(query);\n    setMovies(response);\n    setSearchParams({ query });\n    setQuery('');\n  };\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={query} onChange={onChange} />\n          <Button type=\"submit\">Find</Button>\n        </Form>\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>             \n                  <h3>{title}</h3>  \n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","console","log","message","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path","fetchMovieReviews","author","content","Form","styled","Input","Button","useState","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","handleSubmit","e","preventDefault","response","onSubmit","type","value","onChange","target","length","to","state","from"],"sourceRoot":""}